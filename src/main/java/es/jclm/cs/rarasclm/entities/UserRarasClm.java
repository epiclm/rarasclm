package es.jclm.cs.rarasclm.entities;
// Generated 21-oct-2016 11:12:51 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * UserRarasClm generated by hbm2java
 */
@Entity
@Table(name = "user_raras_clm")
public class UserRarasClm implements java.io.Serializable {

	private String username;
	private Seccion seccion;
	private String password;
	private Boolean enabled;
	private String nombre;
	private String apellido01;
	private String apellido02;
	private Date ultimoAcceso;
	private Integer numIntentos;
	private String puesto;
	private String userRarasClmcol;
	private Boolean generar;
	private String uid;
	private Set<RolRarasClm> rolRarasClms = new HashSet<RolRarasClm>(0);
	private Set<CasoRevisionUsuario> casoRevisionUsuarios = new HashSet<CasoRevisionUsuario>(0);

	public UserRarasClm() {
	}

	public UserRarasClm(String username, String password) {
		this.username = username;
		this.password = password;
	}

	public UserRarasClm(String username, Seccion seccion, String password, Boolean enabled, String nombre,
			String apellido01, String apellido02, Date ultimoAcceso, Integer numIntentos, String puesto,
			String userRarasClmcol, Boolean generar, String uid, Set<RolRarasClm> rolRarasClms,
			Set<CasoRevisionUsuario> casoRevisionUsuarios) {
		this.username = username;
		this.seccion = seccion;
		this.password = password;
		this.enabled = enabled;
		this.nombre = nombre;
		this.apellido01 = apellido01;
		this.apellido02 = apellido02;
		this.ultimoAcceso = ultimoAcceso;
		this.numIntentos = numIntentos;
		this.puesto = puesto;
		this.userRarasClmcol = userRarasClmcol;
		this.generar = generar;
		this.uid = uid;
		this.rolRarasClms = rolRarasClms;
		this.casoRevisionUsuarios = casoRevisionUsuarios;
	}

	@Id

	@Column(name = "username", unique = true, nullable = false, length = 45)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "seccion")
	public Seccion getSeccion() {
		return this.seccion;
	}

	public void setSeccion(Seccion seccion) {
		this.seccion = seccion;
	}

	@Column(name = "password", nullable = false, length = 128)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "enabled")
	public Boolean getEnabled() {
		return this.enabled;
	}

	public void setEnabled(Boolean enabled) {
		this.enabled = enabled;
	}

	@Column(name = "nombre", length = 55)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "apellido_01", length = 55)
	public String getApellido01() {
		return this.apellido01;
	}

	public void setApellido01(String apellido01) {
		this.apellido01 = apellido01;
	}

	@Column(name = "apellido_02", length = 55)
	public String getApellido02() {
		return this.apellido02;
	}

	public void setApellido02(String apellido02) {
		this.apellido02 = apellido02;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ultimo_acceso", length = 19)
	public Date getUltimoAcceso() {
		return this.ultimoAcceso;
	}

	public void setUltimoAcceso(Date ultimoAcceso) {
		this.ultimoAcceso = ultimoAcceso;
	}

	@Column(name = "num_intentos")
	public Integer getNumIntentos() {
		return this.numIntentos;
	}

	public void setNumIntentos(Integer numIntentos) {
		this.numIntentos = numIntentos;
	}

	@Column(name = "puesto", length = 100)
	public String getPuesto() {
		return this.puesto;
	}

	public void setPuesto(String puesto) {
		this.puesto = puesto;
	}

	@Column(name = "user_raras_clmcol", length = 45)
	public String getUserRarasClmcol() {
		return this.userRarasClmcol;
	}

	public void setUserRarasClmcol(String userRarasClmcol) {
		this.userRarasClmcol = userRarasClmcol;
	}

	@Column(name = "generar")
	public Boolean getGenerar() {
		return this.generar;
	}

	public void setGenerar(Boolean generar) {
		this.generar = generar;
	}

	@Column(name = "uid", length = 55)
	public String getUid() {
		return this.uid;
	}

	public void setUid(String uid) {
		this.uid = uid;
	}

	@ManyToMany(fetch = FetchType.EAGER)
	@JsonIgnore
	@JoinTable(name = "user_role_raras_clm", catalog = "rarasclmtest", joinColumns = {
			@JoinColumn(name = "username", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "user_rol", nullable = false, updatable = false) })
	public Set<RolRarasClm> getRolRarasClms() {
		return this.rolRarasClms;
	}

	public void setRolRarasClms(Set<RolRarasClm> rolRarasClms) {
		this.rolRarasClms = rolRarasClms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userRarasClm")
	@JsonIgnore
	public Set<CasoRevisionUsuario> getCasoRevisionUsuarios() {
		return this.casoRevisionUsuarios;
	}

	public void setCasoRevisionUsuarios(Set<CasoRevisionUsuario> casoRevisionUsuarios) {
		this.casoRevisionUsuarios = casoRevisionUsuarios;
	}
	
	@Transient
	public boolean isAdmin() {
		for(RolRarasClm rol : this.getRolRarasClms()) {
			if(rol.getDeno().equalsIgnoreCase("ROLE_ADMIN"))
				return true;
		}
		return false;
	}
		

}
