package es.jclm.cs.rarasclm.entities;
// Generated 15-jun-2016 6:48:58 by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * HistoriasClinicasId generated by hbm2java
 */
@Embeddable
public class HistoriasClinicasId implements java.io.Serializable {

	private int paciente;
	private String hospital;
	private String nhc;

	public HistoriasClinicasId() {
	}

	public HistoriasClinicasId(int paciente, String hospital, String nhc) {
		this.paciente = paciente;
		this.hospital = hospital;
		this.nhc = nhc;
	}

	@Column(name = "paciente", nullable = false)
	public int getPaciente() {
		return this.paciente;
	}

	public void setPaciente(int paciente) {
		this.paciente = paciente;
	}

	@Column(name = "hospital", nullable = false, length = 6)
	public String getHospital() {
		return this.hospital;
	}

	public void setHospital(String hospital) {
		this.hospital = hospital;
	}

	@Column(name = "nhc", nullable = false, length = 12)
	public String getNhc() {
		return this.nhc;
	}

	public void setNhc(String nhc) {
		this.nhc = nhc;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof HistoriasClinicasId))
			return false;
		HistoriasClinicasId castOther = (HistoriasClinicasId) other;

		return (this.getPaciente() == castOther.getPaciente())
				&& ((this.getHospital() == castOther.getHospital()) || (this.getHospital() != null
						&& castOther.getHospital() != null && this.getHospital().equals(castOther.getHospital())))
				&& ((this.getNhc() == castOther.getNhc()) || (this.getNhc() != null && castOther.getNhc() != null
						&& this.getNhc().equals(castOther.getNhc())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getPaciente();
		result = 37 * result + (getHospital() == null ? 0 : this.getHospital().hashCode());
		result = 37 * result + (getNhc() == null ? 0 : this.getNhc().hashCode());
		return result;
	}

}
